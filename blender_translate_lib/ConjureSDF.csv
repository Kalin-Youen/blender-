"渲染网格所需的最小表示","Minimal representation needed to render a mesh"
"将已评估的网格数据复制到缓冲区，以便在渲染线程上更新 VBO","Copy evaluated mesh data into buffers for updating the VBOs on the render thread"
"更新此网格的变换信息","Update transformation info for this mesh"
"强制重新加载着色器源文件的操作符","Operator to force reload of shader source files"
"重新加载着色器源文件","Reload Shader Sources"
"渲染","render"
"渲染器设置的父面板","Parent panel for renderer settings"
"常规","General"
"全局视口配置","Global viewport configurations"
"视口","Viewport"
"质量设置","Quality settings"
"着色器源文件引用和重新加载设置","Shader source file references and reload settings"
"着色器编译器","Shader Compiler"
"实时重载","Live Reload"
"重载","Reload"
"编译错误：","Compilation error(s):"
"该渲染引擎的自定义每个灯光设置编辑器","Custom per-light settings editor for this render engine"
"CSDF 灯光设置","CSDF Light Settings"
"数据","data"
"CSDF 仅支持太阳光","Only Sun lights are supported by CSDF"
"Conjure Vision","Conjure Vision"
"清理渲染引擎数据，例如停止正在运行的渲染线程","Clean up render engine data, e.g. stopping running render threads"
"处理最终渲染（F12）和材质预览窗口渲染","Handle final render (F12) and material preview window renders"
"当场景或 3D 视口发生变化时调用","Called when a scene or 3D viewport changes"
"为下一次渲染更新网格数据","Update mesh data for next render"
"为下一次渲染更新主（太阳）光数据","Update main (sun) light data for the next render"
"检查是否应重新加载着色器源","Check if we should reload the shader sources"
"用户可配置的渲染器设置集合","Collection of user configurable settings for the renderer"
"顶点着色器","Vertex Shader"
"源文件路径","Source file path"
"片段着色器","Fragment Shader"
"苔丝控制着色器","Tess Control Shader"
"苔丝评估着色器","Tess Evaluation Shader"
"几何着色器","Geometry Shader"
"更改时重新加载源文件","Reload source files on change"
"背景颜色","Background Color"
"场景背景颜色","Background color of the scene"
"Matcap 颜色","Matcap Color"
"场景的 Matcap 颜色","Matcap color of the scene"
"最大距离","Max distance"
"最大视距","Maximum view distance"
"最大步长","Maximum steps"
"射线扫描的最大步长。提高轮廓清晰度","Maximum raymarching steps. Improves silhouette definition"
"最小尺寸","Minimum size"
"可呈现的最小细节","Smallest renderable detail"
"光线缩放","Ray scale"
"通过在光线行进时缩放距离估计值，减少某些与视图相关的伪影","Reduces certain view dependent artifacts, by scaling distance estimate while raymarching"
"区块输出回调","Block Outliner callback"
"停止循环函数调用","stops cyclical function calls"
"区块选择处理程序","Block selection handler"
"强制重载","Force Reload"
"上次着色器错误","Last Shader Error"
"以线框方式显示差异/嵌套","Display Diff/Inset as wire"
"启用后，将场景中所有差异/嵌套基元的绘制类型更改为线框","Changes the drawing type of all difference/inset primitives in the scene to wireframe when enabled"
"CSDF 渲染设置","CSDF Render Settings"
"颜色","Color"
"颜色选择器","color picker"
"强度","Intensity"
"灯光亮度","Brightness of the light"
"注册面板、操作符和渲染引擎本身","Register panels, operators, and the render engine itself"
"卸载之前注册的所有内容","Unload everything previously registered"
"用于渲染普通 Blender 网格的着色器","Shader for rendering regular blender meshes"
"result=999999；","result=999999;"
"还不确定在这里做什么","Not sure yet what to do here"
"根据用户的 GLSL 源文件编译着色器","Shader compiled from the user's GLSL source files"
"将源文件读入各自的阶段缓冲区，以便重新编译","Read source files into their respective stage buffers for recompilation"
"用户着色器编译失败时的安全后备着色器","Safe fallback shader in case the user shader fails to compile"
"此着色器是否执行细分","Does this shader perform tessellation"
"顶点","Vertex"
"片段","Fragment"
"细分控制","Tessellation Control"
"细分评估","Tessellation Evaluation"
"几何图形","Geometry"
"执行此着色器所需的清理工作","Perform cleanup necessary for this shader"
"启用顶点属性数组并为读取 GL_ARRAY_BUFFER 设置指针","Enable a vertex attrib array and set the pointer for GL_ARRAY_BUFFER reads"
"汇总源文件修改时间","Aggregate file modication times from sources"
"检查任何源文件中的文件更新时间是否发生变化","Check if the file update time has changed in any of the source files"
"CSDF 根","CSDF Root"
"立方体 SDF","Cube SDF"
"球体 SDF","Sphere SDF"
"椭圆体 SDF","Ellipsoid SDF"
"圆柱体 SDF","Cylinder SDF"
"拉长圆柱体 SDF","Elongated Cylinder SDF"
"带帽圆锥体 SDF","Capped Cone SDF"
"双囊 SDF","BiCapsule SDF"
"胶囊 SDF","Capsule SDF"
"硬币 SDF","Coin SDF"
"链接 SDF","Link SDF"
"环形 SDF","Torus SDF"
"六边形 SDF","Hexagon SDF"
"CSDF 基元","CSDF Primitives"
".对象模式",".objectmode"
"ConjureSDF","ConjureSDF"
"添加原型","Add Primitives"
"照明","Lighting"
"ConjureSDF 叠加","ConjureSDF Overlays"
"将非 Unions 显示为线状","Display non Unions as wire"
"扩展","Expand"
"场景","Scene"
"现在添加一个 CSDF 基元（Shift+A）","Now add a CSDF primitive (Shift+A)"
"解锁大纲器","To unlock the Outliner"
"快速添加一个球(或Shift+A添加)","Conjure an Orb to ponder"
"大纲","Outliner"
"准备开始","Oh Great Wizard."
"切换到 “Conjure”并切换着色到渲染模式。","Switch to Conjure Vision."
"渲染引擎","Render Engine"
"点击以下按钮开始Conjuring","Then cast the spell below to commence Conjuring"
"添加根","Add Root"
"设置","Settings"
"世界镜像","World Mirror"
"翻转方向","Flip Direction"
"平滑镜像","Smooth Mirroring"
"镜像强度","Strength"
"上移一层","Unnest"
"移到活动项下","Nest under Active"
"基元： ","Primitives: "
"内存： ","Memory: "
"在属性编辑器的数据上下文中创建一个面板","Creates a Panel in the data context of the properties editor"
"对象","object"
"不是 CSDF 对象","Not a CSDF object"
"sdf_","sdf_"
"操作： ","Operation: "
"深度","Depth"
"混合： ","Blending: "
"注：在强度为 0 时将混合设置为无","Note: Set Blending to none at 0 strength"
"以获得更好的性能","for better performance"
"基元","Primitive"
"设置：","Settings:"
"忽略镜像","Ignore Mirror"
"固化","Solidify"
"厚度","Thickness"
"圆角","Rounded"
"圆角","Rounding"
"参数","param"
"r2","r2"
"通过 PIP 安装 ModernGL","Installs ModernGL via PIP"
"CSDF","CSDF"
"将 SDF 场景转换为网格","Converts SDF scene to mesh"
"转换为网格","Convert to Mesh"
"分块","Chunk"
"添加边界可视化对象","Adds Bounds visualization object"
"添加边界","Add Bounds"
"CSDF_Meshing_Corner01","CSDF_Meshing_Corner01"
"CSDF_Meshing_Corner02","CSDF_Meshing_Corner02"
"CSDF_Meshing_Bounds","CSDF_Meshing_Bounds"
"合并网格块，并重合网格块以去除伪影","Merges meshed chunks, and remeshes them to get rid of artifacts"
"清理网格块","Clean up Mesh Chunks"
"网格划分","Meshing"
"边界属性","Bounds Properties"
"角 01","Corner 01"
"角 02","Corner 02"
"未找到 ModernGL、","ModernGL not found,"
"通过插件首选项安装！","install via Addon Preferences!"
"缺少边界，可以","Missing Bounds, can"
"体素总数 ","Total Voxels: "
"估计转换时间： ","Estimated Conversion Time: "
"最后网格信息","Last Meshing info:"
"体素数量 ","Number of Voxels: "
"网格化时间 ","Time to Mesh: "
"清理后，重网格密度和平滑度","After cleanup, Remesh Density and Smoothing"
"可以在修改器面板中调整","can be adjusted in the modifiers panel"
"密度","Density"
"每米三角形数","Triangles per Meter"
"最后网格块数","last chunk count"
"上次网格划分操作的块数","Number of chunks on last meshing operation"
"最后网格块时间","last chunk time"
"执行上次网格划分操作所用的时间（秒","Time it took to perform last meshing operation, in seconds"
"标识符","Identifier"
"0 到 9999 之间的唯一整数","Unique integer between 0 and 9999"
"是 csdf 原始数据","is csdf prim"
"是 CSDF 对象","is a CSDF object"
"是根","is root"
"是 SDF 对象的根","is the root of an SDF object"
"参数 01","Parameter 01"
"附加参数","additional parameter"
"操作类型","Operation Type"
"是圆角 SDF","Is a rounded SDF"
"混合","Blending"
"操作强度","Operation Strength"
"操作类型的影响程度","How big the influence of the operation type is"
"世界镜像","World Mirroring"
"在 X Y 或 Z 方向上围绕世界原点镜像 SDF","Mirror the SDF around the world origin in X Y or Z"
"平滑镜面","smooth mirror"
"平滑镜面周围区域","smooths the area around the mirror plane"
"平滑镜面强度","smooth mirroring strength"
"镜面周围平滑区域的大小","how large the smoothing area is around the mirror plane"
"翻转方向","Flip direction"
"从 - 镜像到 + 镜像，而不是从 + 镜像到 - 镜像","Mirror from - to + instead of from + to -"
"基元不受根镜像设置的影响","Primitive is not affected by root mirror settings"
"固化","solidify"
"使基底中空","Makes the primitive hollow"
"固化厚度","solidify thickness"
"曲面的厚度","Thickness of the surface"
"显示在视口中","Show in Viewport"
"如果打开，则显示该基底面","Displays the primitive if toggled on"
"添加 CSDF 基元。\原始物件会添加到活动物件下。\无活动对象时将基底添加到根层","Add CSDF primitive. \nprimitive is added under active object. \nNo active object adds primitive to root level"
"创建圆形 SDF（如果有","Creates Rounded SDF if available"
"添加 CSDF 根对象。保存 CSDF 基元的所有场景信息","Add CSDF Root object. Holds all scene info for CSDF primitives"
"移动项目","Move Item"
"到顶部/底部","to top/bottom"
"将项目完全移至堆栈顶部或底部","move completely to the top or bottom of the stack"
"选择嵌套基元","Select nested primitives"
"减少一级嵌套。\在活动基元下嵌套","Reduce nesting by one level. \nNest under active primitive"
"取消嵌套","un nest"
"安装 ModernGL","Install ModernGL"
"已安装 ModernGL","ModernGL has already been installed"
"保持基元比例","Keep Primitive Scale"
"当改变基元类型时，基元的比例不会恢复到默认值","Scale of primitive does not revert to default when primitive type is changed"
"基元","Primitives"